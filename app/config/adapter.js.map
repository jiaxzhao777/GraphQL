{
    "version": 3,
    "sources": [
        "../../src/config/adapter.js"
    ],
    "names": [
        "fileCache",
        "require",
        "nunjucks",
        "fileSession",
        "mysql",
        "Console",
        "File",
        "DateFile",
        "path",
        "isDev",
        "think",
        "env",
        "exports",
        "cache",
        "type",
        "common",
        "timeout",
        "file",
        "handle",
        "cachePath",
        "join",
        "ROOT_PATH",
        "pathDepth",
        "gcInterval",
        "model",
        "logConnect",
        "logSql",
        "logger",
        "msg",
        "info",
        "mongoose",
        "connectionString",
        "session",
        "cookie",
        "name",
        "sessionPath",
        "view",
        "viewPath",
        "sep",
        "extname",
        "console",
        "backups",
        "absolute",
        "maxLogSize",
        "filename",
        "dateFile",
        "level",
        "pattern",
        "alwaysIncludePattern"
    ],
    "mappings": "AAAA,MAAMA,YAAYC,QAAQ,kBAAR,CAAlB;AACA,MAAMC,WAAWD,QAAQ,qBAAR,CAAjB;AACA,MAAME,cAAcF,QAAQ,oBAAR,CAApB;AACA,MAAMG,QAAQH,QAAQ,mBAAR,CAAd;AACA,MAAM,EAAEI,OAAF,EAAWC,IAAX,EAAiBC,QAAjB,KAA8BN,QAAQ,eAAR,CAApC;AACA,MAAMO,OAAOP,QAAQ,MAAR,CAAb;AACA,MAAMQ,QAAQC,MAAMC,GAAN,KAAc,aAA5B;;AAEA;;;;AAIAC,QAAQC,KAAR,GAAgB;AACdC,QAAM,MADQ;AAEdC,UAAQ;AACNC,aAAS,KAAK,EAAL,GAAU,EAAV,GAAe,IADlB,CACwB;AADxB,GAFM;AAKdC,QAAM;AACJC,YAAQlB,SADJ;AAEJmB,eAAWX,KAAKY,IAAL,CAAUV,MAAMW,SAAhB,EAA2B,eAA3B,CAFP,EAEoD;AACxDC,eAAW,CAHP;AAIJC,gBAAY,KAAK,EAAL,GAAU,EAAV,GAAe,IAJvB,CAI6B;AAJ7B;AALQ,CAAhB;;AAaA;;;;AAIAX,QAAQY,KAAR,GAAgB;AACdV,QAAM,UADQ;AAEdC,UAAQ;AACNU,gBAAYhB,KADN;AAENiB,YAAQjB,KAFF;AAGNkB,YAASC,GAAD,IAASlB,MAAMiB,MAAN,CAAaE,IAAb,CAAkBD,GAAlB;AAHX,GAFM;AAOdE,YAAU;AACRC,sBAAkB;AADV;AAGV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBc,CAAhB;;AAuBA;;;;AAIAnB,QAAQoB,OAAR,GAAkB;AAChBlB,QAAM,MADU;AAEhBC,UAAQ;AACNkB,YAAQ;AACNC,YAAM;AACN;AACA;AAHM;AADF,GAFQ;AAShBjB,QAAM;AACJC,YAAQf,WADJ;AAEJgC,iBAAa3B,KAAKY,IAAL,CAAUV,MAAMW,SAAhB,EAA2B,iBAA3B;AAFT;AATU,CAAlB;;AAeA;;;;AAIAT,QAAQwB,IAAR,GAAe;AACbtB,QAAM,UADO;AAEbC,UAAQ;AACNsB,cAAU7B,KAAKY,IAAL,CAAUV,MAAMW,SAAhB,EAA2B,MAA3B,CADJ;AAENiB,SAAK,GAFC;AAGNC,aAAS;AAHH,GAFK;AAObrC,YAAU;AACRgB,YAAQhB;AADA;AAPG,CAAf;;AAYA;;;;AAIAU,QAAQe,MAAR,GAAiB;AACfb,QAAML,QAAQ,SAAR,GAAoB,UADX;AAEf+B,WAAS;AACPtB,YAAQb;AADD,GAFM;AAKfY,QAAM;AACJC,YAAQZ,IADJ;AAEJmC,aAAS,EAFL,EAES;AACbC,cAAU,IAHN;AAIJC,gBAAY,KAAK,IAJb,EAImB;AACvBC,cAAUpC,KAAKY,IAAL,CAAUV,MAAMW,SAAhB,EAA2B,cAA3B;AALN,GALS;AAYfwB,YAAU;AACR3B,YAAQX,QADA;AAERuC,WAAO,KAFC;AAGRJ,cAAU,IAHF;AAIRK,aAAS,aAJD;AAKRC,0BAAsB,IALd;AAMRJ,cAAUpC,KAAKY,IAAL,CAAUV,MAAMW,SAAhB,EAA2B,cAA3B;AANF;AAZK,CAAjB",
    "file": "../../src/config/adapter.js",
    "sourcesContent": [
        "const fileCache = require(\"think-cache-file\");\nconst nunjucks = require(\"think-view-nunjucks\");\nconst fileSession = require(\"think-session-file\");\nconst mysql = require(\"think-model-mysql\");\nconst { Console, File, DateFile } = require(\"think-logger3\");\nconst path = require(\"path\");\nconst isDev = think.env === \"development\";\n\n/**\n * cache adapter config\n * @type {Object}\n */\nexports.cache = {\n  type: \"file\",\n  common: {\n    timeout: 24 * 60 * 60 * 1000, // millisecond\n  },\n  file: {\n    handle: fileCache,\n    cachePath: path.join(think.ROOT_PATH, \"runtime/cache\"), // absoulte path is necessarily required\n    pathDepth: 1,\n    gcInterval: 24 * 60 * 60 * 1000, // gc interval\n  },\n};\n\n/**\n * model adapter config\n * @type {Object}\n */\nexports.model = {\n  type: \"mongoose\",\n  common: {\n    logConnect: isDev,\n    logSql: isDev,\n    logger: (msg) => think.logger.info(msg),\n  },\n  mongoose: {\n    connectionString: \"mongodb://127.0.0.1:27017/gqltest\",\n  },\n  // mysql: {\n  //   handle: mysql,\n  //   database: '',\n  //   prefix: 'think_',\n  //   encoding: 'utf8',\n  //   host: '127.0.0.1',\n  //   port: '',\n  //   user: 'root',\n  //   password: 'root',\n  //   dateStrings: true\n  // }\n};\n\n/**\n * session adapter config\n * @type {Object}\n */\nexports.session = {\n  type: \"file\",\n  common: {\n    cookie: {\n      name: \"thinkjs\",\n      // keys: ['werwer', 'werwer'],\n      // signed: true\n    },\n  },\n  file: {\n    handle: fileSession,\n    sessionPath: path.join(think.ROOT_PATH, \"runtime/session\"),\n  },\n};\n\n/**\n * view adapter config\n * @type {Object}\n */\nexports.view = {\n  type: \"nunjucks\",\n  common: {\n    viewPath: path.join(think.ROOT_PATH, \"view\"),\n    sep: \"_\",\n    extname: \".html\",\n  },\n  nunjucks: {\n    handle: nunjucks,\n  },\n};\n\n/**\n * logger adapter config\n * @type {Object}\n */\nexports.logger = {\n  type: isDev ? \"console\" : \"dateFile\",\n  console: {\n    handle: Console,\n  },\n  file: {\n    handle: File,\n    backups: 10, // max chunk number\n    absolute: true,\n    maxLogSize: 50 * 1024, // 50M\n    filename: path.join(think.ROOT_PATH, \"logs/app.log\"),\n  },\n  dateFile: {\n    handle: DateFile,\n    level: \"ALL\",\n    absolute: true,\n    pattern: \"-yyyy-MM-dd\",\n    alwaysIncludePattern: true,\n    filename: path.join(think.ROOT_PATH, \"logs/app.log\"),\n  },\n};\n"
    ]
}